<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>jtatro5</groupId>
    <artifactId>JimJdeployTest</artifactId>
    <version>1.0.15</version>
    <packaging>jar</packaging>
    
    <properties>
        <maven.compiler.release>17</maven.compiler.release>
        <mainClass>jtatro.JimJdeployTestLauncher</mainClass>
        <javafx.version>17</javafx.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <!--  
                    This configuration setup stops a strange compiler error
                    if you don't specifically configure the <source> and
                    <target> options:
                    Compilation failure: Compilation failure: 
                    [ERROR] Source option 5 is no longer supported. Use 7 or later.
                    [ERROR] Target option 5 is no longer supported. Use 7 or later.
                -->
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
          
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>
                                ${mainClass}
                            </mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- No need to install this app into local repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
                        
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <!-- automatically creates the classpath using all project dependencies,
                        also adding the project build directory -->
                        <classpath/>
                        <argument>${mainClass}</argument>
                    </arguments>
                </configuration>
            </plugin>
                       
        </plugins>        
    </build>    
    
    <dependencies>
        <!--
            These first two dependencies have further depencies on javafx.base
            and javafx.graphics which will be brought in by Maven automatically
            as transitive dependencies.  No need to explicitly mention them
            here
        -->
        <dependency>
            <!-- required by DSLAnalyzer as a javafx project -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <!-- required by DSLAnalyzer as a javafx project -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <!-- required by DSLAnalyzer as a javafx project -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
    </dependencies>
    
</project>